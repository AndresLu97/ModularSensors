name: Build and Publish Documentation

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created

env:
  DOXYGEN_VERSION: Release_1_8_20

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      # check out the ModularSensors repo
      - uses: actions/checkout@v2
        with:
          path: code_docs/ModularSensors

      - name: Restore or Cache pip
        uses: actions/cache@v2
        id: cache_pip
        with:
          path: ~/.cache/pip
          # if requirements.txt hasn't changed, then it will be a "cache hit" and pip will be restored
          # if requirements.txt HAS changed, it will be a "cache miss" and a new cache of pip will be created if the job completes successfully
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Restore or Cache PlatformIO and Libraries
        uses: actions/cache@v2
        id: cache_pio
        with:
          path: ~/.platformio
          # if nothing in the lock files has changed, then it will be a "cache hit"
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python
        uses: actions/setup-python@v2

      # This should be pulled from cache, if there's not a new version
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      # Install *all* the dependencies!
      # We're including the dependencies just so the includes can follow in the doxygen pre-processor
      - name: Install the dependencies at global level
        run: |
          pio lib -g install envirodiy/EnviroDIY_DS3231
          pio lib -g install arduino-libraries/RTCZero
          pio lib -g install greygnome/EnableInterrupt
          pio lib -g install greiman/SdFat
          pio lib -g install vshymanskyy/TinyGSM
          pio lib -g install knolleary/PubSubClient
          pio lib -g install adafruit/'Adafruit BusIO'
          pio lib -g install adafruit/'Adafruit Unified Sensor'
          pio lib -g install https://github.com/soligen2010/Adafruit_ADS1X15.git
          pio lib -g install adafruit/'Adafruit AM2315'
          pio lib -g install adafruit/'Adafruit BME280 Library'
          pio lib -g install adafruit/'DHT sensor library'
          pio lib -g install adafruit/'Adafruit INA219'
          pio lib -g install adafruit/'Adafruit MPL115A2'
          pio lib -g install paulstoffregen/OneWire
          pio lib -g install milesburton/DallasTemperature
          pio lib -g install envirodiy/SDI-12
          pio lib -g install northernwidget/MS5803
          pio lib -g install https://github.com/NorthernWidget-Skunkworks/Tally_Library.git#Dev_I2C
          pio lib -g install envirodiy/SensorModbusMaster
          pio lib -g install envirodiy/KellerModbus
          pio lib -g install envirodiy/YosemitechModbus
          pio lib -g install vshymanskyy/StreamDebugger
          pio lib -g install https://github.com/EnviroDIY/SoftwareSerial_ExternalInts.git
          pio lib -g install https://github.com/PaulStoffregen/AltSoftSerial.git
          pio lib -g install https://github.com/SRGDamia1/NeoSWSerial.git
          pio lib -g install https://github.com/Testato/SoftwareWire.git

      - name: Update Libraries from Cache
        run: pio lib -g update

      - name: Install GraphViz (dot)
        run: sudo apt-get -y install graphviz

      - name: Restore or Cache Doxygen
        id: cache_doxygen
        uses: actions/cache@v2
        with:
          path: doxygen-src
          key: ${{ runner.os }}-doxygen-${{ env.DOXYGEN_VERSION }}

      - name: Clone and build doxygen
        if: steps.cache_doxygen.outputs.cache-hit != 'true'
        env:
          TRAVIS_BUILD_DIR: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}/code_docs/ModularSensors/
          chmod +x continuous_integration/build-install-doxygen.sh
          sh continuous_integration/build-install-doxygen.sh

      # This should be pulled from cache, if there's not a new version
      - name: Install Pygments and other m.css requirements
        run: pip3 install jinja2 Pygments beautifulsoup4

      # check out my fork of m.css, for processing Doxygen output
      - name: Checkout m.css
        uses: actions/checkout@v2
        with:
          # Repository name with owner. For example, actions/checkout
          repository: SRGDamia1/m.css
          path: code_docs/m.css

      - name: Generate all the documentation
        env:
          TRAVIS_BUILD_DIR: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}/code_docs/ModularSensors/
          chmod +x continuous_integration/generate-documentation.sh
          sh continuous_integration/generate-documentation.sh

      - name: Deploy to github pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ github.workspace }}/code_docs/ModularSensorsDoxygen/m.css
