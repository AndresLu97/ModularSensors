on:
  push:
    branches:
      - main
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore or Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          # if requirements.txt hasn't changed, then it will be a "cache hit" and pip will be restored
          # if requirements.txt HAS changed, it will be a "cache miss" and a new cache of pip will be created if the job completes successfully
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2

      # This should be pulled from cache, if there's not a new version
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      # Install *all* the libraries!
      - name: Install the libraries
        run: |
          pio lib -g install envirodiy/EnviroDIY_DS3231
          pio lib -g install arduino-libraries/RTCZero
          pio lib -g install greygnome/EnableInterrupt
          pio lib -g install greiman/SdFat
          pio lib -g install vshymanskyy/TinyGSM
          pio lib -g install knolleary/PubSubClient
          pio lib -g install adafruit/Adafruit BusIO
          pio lib -g install adafruit/Adafruit Unified Sensor
          pio lib -g install https://github.com/soligen2010/Adafruit_ADS1X15.git
          pio lib -g install adafruit/Adafruit AM2315
          pio lib -g install adafruit/Adafruit BME280 Library
          pio lib -g install adafruit/DHT sensor library
          pio lib -g install adafruit/Adafruit INA219
          pio lib -g install adafruit/Adafruit MPL115A2
          pio lib -g install paulstoffregen/OneWire
          pio lib -g install milesburton/DallasTemperature
          pio lib -g install envirodiy/SDI-12
          pio lib -g install northernwidget/MS5803
          pio lib -g install https://github.com/NorthernWidget-Skunkworks/Tally_Library.git#Dev_I2C
          pio lib -g install envirodiy/SensorModbusMaster
          pio lib -g install envirodiy/KellerModbus
          pio lib -g install envirodiy/YosemitechModbus
          pio lib -g install vshymanskyy/StreamDebugger
          pio lib -g install https://github.com/$GITHUB_REPOSITORY.git#$GITHUB_SHA
          pio lib -g install https://github.com/EnviroDIY/SoftwareSerial_ExternalInts.git
          pio lib -g install https://github.com/PaulStoffregen/AltSoftSerial.git
          pio lib -g install https://github.com/SRGDamia1/NeoSWSerial.git
          pio lib -g install https://github.com/Testato/SoftwareWire.git

      # Uninstall graphics libraries from Adafruit
      - name: Uninstall graphics the libraries
        run: |
          pio lib -g uninstall adafruit/Adafruit GFX Library
          pio lib -g uninstall adafruit/Adafruit NeoPixel
          pio lib -g uninstall adafruit/Adafruit SSD1306
          pio lib -g uninstall adafruit/Adafruit ADXL343
          pio lib -g uninstall adafruit/Adafruit STMPE610
          pio lib -g uninstall adafruit/Adafruit TouchScreen
          pio lib -g uninstall adafruit/Adafruit ILI9341

      # zip up all the installed libraries
      - name: Zip libraries
        run: |
          zip ModularSensors_Dependencies.zip -r ~/.platformio/lib
          zip -d -q ModularSensors_Dependencies "*/.gitattributes" "*/.gitignore" "*/.gitmodules" "*/.github/*" "*.sh"  "*/Doxyfile" "*/.travis.yml"
          zip -d -q ModularSensors_Dependencies "*/EnviroDIY_ModularSensors/doc/*"
          zip -d -q ModularSensors_Dependencies "*/TinyGSM/extras/*"
          zip -d -q ModularSensors_Dependencies "*/YosemitechModbus/doc/*"
          zip -d -q ModularSensors_Dependencies "*/SdFat/extras/*"
          zip -d -q ModularSensors_Dependencies "*/doc/*.pdf"

      # Create a new release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload the zipped dependencies to the release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ModularSensors_Dependencies.zip
          asset_name: ModularSensors_Dependencies.zip
          asset_content_type: application/zip
