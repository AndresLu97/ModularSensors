name: Build All Menu Configurations

# Triggers the workflow on push or pull request events
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLATFORMIO_SRC_DIR: temp/menu_a_la_carte
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      matrix:
        include:
          - modemFlag:
              [
                MS_BUILD_TEST_XBEE_CELLULAR,
                MS_BUILD_TEST_XBEE_LTE_B,
                MS_BUILD_TEST_XBEE_3G_B,
                MS_BUILD_TEST_XBEE_WIFI,
                MS_BUILD_TEST_ESP8266,
                MS_BUILD_TEST_BG96,
                MS_BUILD_TEST_MONARCH,
                MS_BUILD_TEST_SIM800,
                MS_BUILD_TEST_SIM7000,
                MS_BUILD_TEST_SIM7080,
                MS_BUILD_TEST_S2GB,
                MS_BUILD_TEST_UBEE_R410M,
                MS_BUILD_TEST_UBEE_U201,
              ]
            sensorFlag: []
            publisherFlag:
              [MS_BUILD_TEST_MMW, MS_BUILD_TEST_DREAMHOST, MS_BUILD_TEST_THINGSPEAK]

          - modemFlag: [MS_BUILD_TEST_SIM7080]
            sensorFlag:
              [
                MS_BUILD_TEST_AM2315,
                MS_BUILD_TEST_DHT,
                MS_BUILD_TEST_SQ212,
                MS_BUILD_TEST_ATLASCO2,
                MS_BUILD_TEST_ATLASDO,
                MS_BUILD_TEST_ATLASORP,
                MS_BUILD_TEST_ATLASPH,
                MS_BUILD_TEST_ATLASRTD,
                MS_BUILD_TEST_ATLASEC,
                MS_BUILD_TEST_BME280,
                MS_BUILD_TEST_OBS3,
                MS_BUILD_TEST_ES2,
                MS_BUILD_TEST_VOLTAGE,
                MS_BUILD_TEST_MPL115A2,
                MS_BUILD_TEST_INSITURDO,
                MS_BUILD_TEST_ACCULEVEL,
                MS_BUILD_TEST_NANOLEVEL,
                MS_BUILD_TEST_MAXBOTIX,
                MS_BUILD_TEST_DS18,
                MS_BUILD_TEST_MS5803,
                MS_BUILD_TEST_5TM,
                MS_BUILD_TEST_CTD,
                MS_BUILD_TEST_HYDROS21,
                MS_BUILD_TEST_TEROS11,
                MS_BUILD_TEST_PALEOTERRA,
                MS_BUILD_TEST_RAINI2C,
                MS_BUILD_TEST_TALLY,
                MS_BUILD_TEST_INA219,
                MS_BUILD_TEST_CYCLOPS,
                MS_BUILD_TEST_ANALOGEC,
                MS_BUILD_TEST_Y504,
                MS_BUILD_TEST_Y510,
                MS_BUILD_TEST_Y511,
                MS_BUILD_TEST_Y514,
                MS_BUILD_TEST_Y520,
                MS_BUILD_TEST_Y532,
                MS_BUILD_TEST_Y533,
                MS_BUILD_TEST_Y550,
                MS_BUILD_TEST_Y4000,
                MS_BUILD_TEST_DOPTO,
              ]
            publisherFlag: []

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set variables
        run: |
          if [[ -z "${GITHUB_HEAD_REF}" ]]; then
            echo "::debug::Push to commit ${GITHUB_SHA}"
            echo "LIBRARY_INSTALL_SOURCE=https://github.com/${GITHUB_REPOSITORY}.git#${GITHUB_SHA}" >> $GITHUB_ENV
          else
            echo "::debug::Pull Request from the ${GITHUB_HEAD_REF} branch"
            echo "LIBRARY_INSTALL_SOURCE=https://github.com/${GITHUB_REPOSITORY}.git#${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          fi
          if [[ -z "${GITHUB_HEAD_REF}" ]]; then
            echo "::debug::Push to commit ${GITHUB_SHA}"
            echo "LIBRARY_INSTALL_ZIP=https://github.com/${GITHUB_REPOSITORY}/archive/${GITHUB_SHA}.zip" >> $GITHUB_ENV
          else
            echo "::debug::Pull Request from the ${GITHUB_HEAD_REF} branch"
            echo "LIBRARY_INSTALL_ZIP=https://github.com/${GITHUB_REPOSITORY}/archive/${GITHUB_HEAD_REF}.zip" >> $GITHUB_ENV
          fi

      - name: Set up Python
        uses: actions/setup-python@v2.2.2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      # We use the `arduino/setup-arduino-cli` action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Restore or Cache PlatformIO and Arduino platforms and libraries
        uses: actions/cache@v2.1.5
        id: cache_libraries
        with:
          path: |
            ~/.platformio
            home/arduino
          # if nothing in the dependencies.json file has changed, then it will
          # be a "cache hit" and we can restore libraries from cache and not
          # download them.  If it has changed we have to re-download.
          key: ${{ hashFiles('./dependencies.json') }}

      # Install cores and library dependencies for the Arduino CLI
      - name: Install the Arduino libraries
        if: steps.cache_libraries.outputs.cache-hit != 'true'
        run: |
          chmod +x continuous_integration/install-deps-arduino-cli.sh
          sh continuous_integration/install-deps-arduino-cli.sh

      # Install ModularSensors for the Arduino CLI
      - name: Install the testing version of Modular Sensors
        run: |
          curl -L ${{ env.LIBRARY_INSTALL_ZIP }} --create-dirs -o home/arduino/downloads/ModularSensors.zip
          unzip -q -o home/arduino/downloads/ModularSensors.zip -d home/arduino/downloads/ -x "*.git/*" "continuous_integration/*" "docs/*" "examples/*"
          mkdir -p home/arduino/user/libraries/ModularSensors
          mv home/arduino/downloads/ModularSensors-${GITHUB_SHA}/* home/arduino/user/libraries/ModularSensors
          arduino-cli --config-file continuous_integration/arduino_cli.yaml lib update-index
          arduino-cli --config-file continuous_integration/arduino_cli.yaml lib list
          ls home/arduino/user/libraries

      - name: Modify menu for matrix configuration
        env:
          modemFlag: ${{ matrix.modemFlag }}
          sensorFlag: ${{ matrix.sensorFlag }}
          publisherFlag: ${{ matrix.publisherFlag }}
        run: |
          echo "${{ env.LIBRARY_INSTALL_SOURCE }}"
          chmod +x continuous_integration/modify-menu-configurations.sh
          sh continuous_integration/modify-menu-configurations.sh

      - name: Test with PlatformIO
        run: platformio run --project-conf="continuous_integration/platformio.ini"

      - name: Test with Arduino CLI
        run: arduino-cli --config-file continuous_integration/arduino_cli.yaml compile --clean --build-property "build.extra_flags=-DNEOSWSERIAL_EXTERNAL_PCINT" --fqbn EnviroDIY:avr:envirodiy_mayfly temp/menu_a_la_carte/

      - name: Uninstall testing version of Modular Sensors before caching
        run: |
          arduino-cli --config-file continuous_integration/arduino_cli.yaml lib uninstall EnviroDIY_ModularSensors
          pio lib -g uninstall EnviroDIY_ModularSensors
