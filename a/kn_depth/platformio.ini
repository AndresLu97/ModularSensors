; ModularSensors a/kn_depth PlatformIO Project Configuration File
; The 'default_envs' drives a/kn_depth/src/ms_cfg for specific peripherals
; SAMD21 M0 - Feather format for B031r1
;   Feather M0 (Adalogger) - ?LED, microSD
;   Feather M0 express - ?LEDs, 2MflashSPI
;   Sodaq_autonomo M0 - not supported, but reference ccF
;   Feather M0 RFM95 LoRa 900Mhz ? - possible support- LEDs
;   Feather M0 RFM69HCW - not supported
;   Feather M0 basic 
;   Feather M0 Bluefruit LE
;   Feather M0 WiFi 
;   Feather M0 RFM96 LoRa 433Mhz - notsupported
; SAMD51 M4 - tbd changes for internal peripherals - watchdog, sleep
; Mayfly/avr - reference as needed.
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = neilh10/ModularSensors sending data to Monitor My Watershed
; From "0.23.15" mayfly serial RS485 appears to be having problems. Switched to Feather_m4+B031
;default_envs = sodaq_autonomo
;default_envs = adafruit_feather_m0  ; not working, but trying
;default_envs = adafruit_feather_m0_express ;not working
default_envs = adafruit_feather_m4
;   actually  ^^^ is adafruit_feather_m4_express

[common]
; We have to ignore these folders or PlatformIO will double count all the dependencies
; .pio\libdeps\adafruit_feather_m4\EnviroDIY_ModularSensors
lib_ignore = .git, doc, examples, arduino_update, ModularSensors
#Would be nice for the following to work
#git_rev = !python -c "import subprocess; print '%s' % subprocess.check_output(['git', 'rev-parse','--abbrev-ref', 'HEAD']).strip()"

; .pioenvs, .piolibdeps, .vscode, include, doc, examples, sensor_tests, compile_tests, pioScripts
lib_cmn_deps =
    ;EnviroDIY_ModularSensors
    ;https://github.com/soligen2010/Adafruit_ADS1X15
;  ^^ Use this when working from an official release of the library
    ;https://github.com/neilh10/ModularSensors#release1
    ;https://github.com/neilh10/ModularSensors#rel1_dvlp1m
;  ^^ Use this when you want to pull from a specific branch 
    ;https://github.com/neilh10/TinyGSM.git
    https://github.com/EnviroDIY/TinyGSM.git
    https://github.com/vshymanskyy/StreamDebugger
    ;https://github.com/arduino-libraries/NTPClient - repalced
    ;if pio broke, not using  library.json
    ; try "platformio lib install" 
    ;https://github.com/neilh10/Adafruit_INA219.git 
    ;https://github.com/greiman/SdFat.git ;- need adafruit/SdFat for multiple SDx
    https://github.com/adafruit/SdFat
    ;https://github.com/GreyGnome/EnableInterrupt.git
    ;https://github.com/EnviroDIY/Sodaq_DS3231.git
    ;https://github.com/knolleary/pubsubclient.git
    ;https://github.com/soligen2010/Adafruit_ADS1X15
    ;https://github.com/adafruit/Adafruit_AM2315
    ;https://github.com/adafruit/Adafruit_BME280_Library
    ;https://github.com/adafruit/DHT-sensor-library
    ;https://github.com/adafruit/Adafruit_INA219
    ;https://github.com/adafruit/Adafruit_MPL115A2
    ;https://github.com/adafruit/Adafruit_Sensor
    ;https://github.com/milesburton/Arduino-Temperature-Control-Library
    ;https://github.com/PaulStoffregen/OneWire
    ;https://github.com/EnviroDIY/Arduino-SDI-12
    ;https://github.com/EnviroDIY/KellerModbus
    ;https://github.com/EnviroDIY/SensorModbusMaster
    ;https://github.com/EnviroDIY/YosemitechModbus
    ;https://github.com/NorthernWidget/MS5803

lib_avr_deps =
    https://github.com/EnviroDIY/Sodaq_DS3231.git

lib_samd_deps =
    ;https://github.com/adafruit/SdFat
    https://github.com/adafruit/Adafruit_SPIFlash
    ;https://github.com/adafruit/Adafruit_TinyUSB_Arduino
    https://github.com/neilh10/arduino-mcp23017
    https://github.com/neilh10/RTCZero ;release1 set as default - see lib\RTCsamdLooUQ
    https://github.com/neilh10/RTClib ;except when exists kn_depth\lib\RTClib, delete .pio\libdeps\xx\RTClib
    ;https://github.com/adafruit/Adafruit-GFX-Library
    ;https://github.com/adafruit/Adafruit_EPD


lib_featherExpress_deps =
    https://github.com/adafruit/Adafruit_NeoPixel
    #feather_Mx_express means local flash disk (2Mbyte+) & NeoPixel

lib_samd21_deps =    

lib_samd51_deps =
    https://github.com/neilh10/EnableInterrupt   ;release1 set as default
    https://github.com/neilh10/Arduino-SDI-12 ;release1 set as default
    ;https://github.com/adafruit/Adafruit_SPIFlash

; for development, can edit directly in these directories ... relative to src_dir
;  Use the src filter to ensure subfolders are built
; If enabled, disable in libdeps=ModularSensors, and may need to delete duplicate directory .libdeps/ModularSensors
cmn_src_filter = +<*> 
    +<../../../src>  +<../../../src/sensors> +<../../../src/publishers> +<../../../src/modems>

#build_flags  -v for detailed cc verbose 
cmn_build_flags =
    ;-Isrc
    ;-I../../src ; .h For easy debug
    ;-Ilib/RTClib ;When exists kn_depth\lib\RTClib
    !python git_rev_macro.py  ;returns -DPIO_SRC_REV=<git_revision>
    -DMQTT_MAX_PACKET_SIZE=240
    -DSDI12_EXTERNAL_PCINT
    -DSTREAMDEBUGGER_DBG
    -DMS_KN_DEPTH_DEBUG
    ;-DMS_PROCESSORSTATS_DEBUG
    ;-DMS_PROCESSORADC_DEBUG
    -DMS_LOGGERMODEM_DEBUG
    -DMS_LOGGERMODEM_DEBUG_DEEP
    -DMS_LOGGERBASE_DEBUG
    ;-DMS_DATAPUBLISHERBASE_DEBUG
    ;-DMS_ENVIRODIYPUBLISHER_DEBUG
    ;-DMS_SMTP2GOJSONPUBLISHER_DEBUG
    -DMS_DIGIXBEEWIFI_DEBUG
    -DMS_DIGIXBEEWIFI_DEBUG_DEEP
    ;-DMS_DIGIXBEECELLULARTRANSPARENT_DEBUG
    ;-DMS_DIGIXBEECELLULARTRANSPARENT_DEBUG_DEEP
    ;-DMS_DIGIXBEE_DEBUG
    -DMS_SENSORBASE_DEBUG
    ;-DMS_TIINA219M_DEBUG
    -DMS_EXTERNALVOLTAGE_DEBUG
    -DMS_KELLERPARENT_DEBUG
    ;-DMS_KELLERPARENT_DEBUG_DEEP

[env:adafruit_feather_m4]
; This is really Feather_M4_Express
platform = atmelsam
board = adafruit_feather_m4
framework = arduino
upload_port = COM29
lib_ldf_mode = deep+

# lib_ignore Std SAMDx AltSoftSerial SoftwareSerial_ExtInts (ignored in SAMD12 Autonomo)
# SensorModbusMaster_ID1824\SensorModbusMaster.cpp.o - M4 Register errors, error: 'REG_GCLK_GENDIV'
# Arduino-SDI-12_ID1486, Arduino-SDI-12\src\SDI12_boards.cpp:171:9: error: 'REG_GCLK_GENDIV' 
# 
lib_ignore = ${common.lib_ignore}, SoftwareSerial_ExtInts, AltSoftSerial, MaximDS3231, SensorModbusMaster_ID1824,  NeoSWSerial
src_filter = ${common.cmn_src_filter}

#build_flags = -v
# SERIAL2_EN fut:SERIAL2_TE_EN  - only enable when modbusSerial required
# SERIAL3_EN
# SERIAL4_EN fut:SERIAL4_TE_EN  - Tty
build_flags = 
    ${common.cmn_build_flags}
    -UVARIANT_QSPI_BAUD_DEFAULT ;prev def cmd line, also variant.h
    ;-DSDQ_QSPI_FLASH
    #!more build_flags
    ;Either Serial4 or SerialUSB 
    -DSERIAL4_EN  
    -DSTANDARD_SERIAL_OUTPUT=Serial4
    -DDEBUGGING_SERIAL_OUTPUT=Serial4
    -D SERIAL2_EN
    ;-D USE_TINYUSB
    -DSDI12_EXTERNAL_PCINT 
    -DMQTT_MAX_PACKET_SIZE=240
    -I../../src ; .h For easy debug
    ;-Isrc
    ;-DMS_PROCSTATS_DEBUG
    ;-DMS_LOGGERBASE_DEBUG
    ;-DMS_DATAPUBLISHERBASE_DEBUG
    ;-DMS_MODEM_DEBUG
    ;-DSTREAMDEBUGGER_DBG
    ;-DTINY_GSM_DEBUG=Serial4
    ;-DMS_DIGIXBEEWIFI_DEBUG
    -DMS_PortExpanderB031E_DEBUG

lib_deps = ${common.lib_cmn_deps}  ${common.lib_samd_deps} ${common.lib_featherExpress_deps} ${common.lib_samd51_deps}



[env:mayfly]
#lib_compat_mode = 2 ; Debugging multiple TinyGSMs
lib_compat_mode = strict ; Debugging multiple TinyGSMs
upload_port = COM21  ;COM13
board = mayfly
platform = atmelavr
framework = arduino
lib_ldf_mode = deep+
; AVR boards need to ignore RTCZero, it's for SAMD only and will not compile for AVR
lib_ignore = ${common.lib_ignore}, RTCZero
src_filter = ${common.cmn_src_filter}

;****build_flags options
;-DSTREAMDEBUGGER_DBG
;FUT-DGIT_BRANCH=rel1_dvlp1m  -OR-  Ideally  !git rev-parse HEAD
; -v for verbose
build_flags =
    ${common.cmn_build_flags}
    -DSDI12_EXTERNAL_PCINT
    -DNEOSWSERIAL_EXTERNAL_PCINT
    ;-DTINY_GSM_DEBUG=Serial

lib_deps = ${common.lib_cmn_deps} ${common.lib_avr_deps}
    https://github.com/PaulStoffregen/AltSoftSerial.git
    https://github.com/EnviroDIY/SoftwaterSerial_ExternalInts.git
    https://github.com/SRGDamia1/NeoSWSerial.git
    ;https://github.com/neilh10/KellerModbus#work_km_nanolevel
    ;https://github.com/EnviroDIY/KellerModbus
    ;https://github.com/neilh10/Adafruit_INA219#envirodiy

[env:sodaq_autonomo]
;SAMD21J18A 
;targets = debug ; disable for release
upload_port = COM6
board = sodaq_autonomo
platform = atmelsam
framework = arduino
lib_ldf_mode = deep+
;debug_tool = blackmagic
;debug_port = \.\\COM18
;extra_scripts = extra_script_uf2.py

;https://docs.platformio.org/en/latest/plus/debug-tools/jlink.html#configuration
;debug_tool = jlink
;upload_port
;debug_port

;;supports atmel-ice blackmagic J-LINK - default is sam-ba
;upload_protocol = sam-ba
; SWD interface
;upload_protocol = blackmagic
lib_ignore = ${common.lib_ignore}, SoftwareSerial_ExtInts, AltSoftSerial
src_filter = ${common.cmn_src_filter}
;-DLoggerBase_DBG -DLoggerModem_DBG -DProcessorStats_DBG -DDEBUGGING_SERIAL_OUTPUT=Serial
;-DSTREAMDEBUGGER_DBG
;    -Isrc/sensors
build_flags = 
    ${common.cmn_build_flags}
    -DENABLE_SERIAL2
    ; Serial3 shares with LED
    ;-DENABLE_SERIAL3
    ;Either Serial or SerialUSB  
    -DSTANDARD_SERIAL_OUTPUT=Serial
    -DDEBUGGING_SERIAL_OUTPUT=Serial
    -DDEEP_DEBUGGING_SERIAL_OUTPUT=Serial

lib_deps = ${common.lib_cmn_deps} ${common.lib_samd_deps} ${common.lib_samd21_deps} 
;;    EnviroDIY_ModularSensors
;;  ^^ Use this when working from an official release of the library
    https://github.com/neilh10/ModularSensors#rel1_dvlp1m
    ;https://github.com/EnviroDIY/ModularSensors.git#develop
;;  ^^ Use this when if you want to pull from the develop branch


[env:adafruit_feather_m0]
; Not compiling - needs audit of pin allocation variant.x
;SAMD21J18A with microSD and one LED
;upload_port = COM26
board = adafruit_feather_m0
platform = atmelsam
framework = arduino
lib_ldf_mode = deep+

; Most of the software serial libraries won't compile.  Use the SERCOM's; they're better anyway
lib_ignore = ${common.lib_ignore} SoftwareSerial_ExtInts AltSoftSerial
            NeoSWSerial
src_filter = ${common.cmn_src_filter}
build_flags =
    ${common.cmn_build_flags}
    -DENABLE_SERIAL2
    -D ENABLE_SERIAL4
    -DSDI12_EXTERNAL_PCINT 
    -DMQTT_MAX_PACKET_SIZE=240
    ;Either Serial1? or SerialUSB
    -DSTANDARD_SERIAL_OUTPUT=Serial
    -DDEBUGGING_SERIAL_OUTPUT=Serial

;             NeoSWSerial
; SAMD boards need RTCZero for the real time clock and sleeping
lib_deps = ${common.lib_cmn_deps} ${common.lib_samd_deps} ${common.lib_samd21_deps}
;;    EnviroDIY_ModularSensors
;;  ^^ Use this when working from an official release of the library
    https://github.com/neilh10/ModularSensors#rel1_dvlp1m
    ;https://github.com/EnviroDIY/ModularSensors.git#develop
;;  ^^ Use this when if you want to pull from the develop branch    
