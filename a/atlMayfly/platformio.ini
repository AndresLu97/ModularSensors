; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = ModularSensorsNh example sending data to Monitor My Watershed
;default_envs = adafruit_feather_m4
;default_envs = mayfly
default_envs = sodaq_autonomo
;default_envs = adafruit_feather_m0
;   actually  ^^^ is adafruit_feather_m0_express

[common]
; We have to ignore these folders or PlatformIO will double count all the dependencies
lib_ignore = .git, doc, examples
#Would be nice for the following to work
#git_rev = !python -c "import subprocess; print '%s' % subprocess.check_output(['git', 'rev-parse','--abbrev-ref', 'HEAD']).strip()"

; .pioenvs, .piolibdeps, .vscode, include, doc, examples, sensor_tests, compile_tests, pioScripts
lib_deps =
    ;EnviroDIY_ModularSensors
    ;https://github.com/soligen2010/Adafruit_ADS1X15
;  ^^ Use this when working from an official release of the library
    ;https://github.com/neilh10/ModularSensors#release1
    ;https://github.com/neilh10/ModularSensors#rel1_dvlp1m
    ;https://github.com/neilh10/ModularSensors#rel1_wip190329
;  ^^ Use this when if you want to pull from the develop branch 
    ;https://github.com/neilh10/TinyGSM.git
    https://github.com/neilh10/ModularSensors#rel1_dvlp1_mrg0.23.2
    https://github.com/vshymanskyy/StreamDebugger

lib_avr_deps =

#lib_samd_deps =

lib_featherExpress_deps =
    https://github.com/adafruit/Adafruit_NeoPixel
    #feather_Mx_express means local flash disk (2Mbyte+) & NeoPixel

lib_samd21_deps =    
    https://github.com/adafruit/RTClib
    RTCZero

lib_samd51_deps =
    https://github.com/neilh10/EnableInterrupt   ;release1 set as default
    ;https://github.com/neilh10/RTCZero ;release1 set as default - see lib\RTCsamdLooUQ
    ;https://github.com/neilh10/RTClib ;release1 forked from Adafruit
    https://github.com/neilh10/Arduino-SDI-12 ;release1 set as default

; for development, can edit directly in these directories ... relative to src_dir
;  Use the src filter to ensure subfolders are built
; If enabled, disable in libdeps=ModularSensors, and may need to delete duplicate directory .libdeps/ModularSensors
cmn_src_filter = +<*> 
    +<../../../src>  +<../../../src/sensors> +<../../../src/publishers>


[env:adafruit_feather_m4]
platform = atmelsam
board = adafruit_feather_m4
framework = arduino
upload_port = COM38
lib_ldf_mode = deep+

# lib_ignore Std SAMDx AltSoftSerial SoftwareSerial_ExtInts (ignored in SAMD12 Autonomo)
# SensorModbusMaster_ID1824\SensorModbusMaster.cpp.o - M4 Register errors, error: 'REG_GCLK_GENDIV'
# Arduino-SDI-12_ID1486, Arduino-SDI-12\src\SDI12_boards.cpp:171:9: error: 'REG_GCLK_GENDIV' 
# 
lib_ignore = ${common.lib_ignore}, SoftwareSerial_ExtInts, AltSoftSerial, SensorModbusMaster_ID1824,  NeoSWSerial
src_filter = ${common.cmn_src_filter}
lib_deps = ${common.lib_deps}
 ${common.lib_featherExpress_deps}
 ${common.lib_samd51_deps}

#build_flags = -v
# SERIAL2_EN fut:SERIAL2_TE_EN  - only enable when modbusSerial required
# SERIAL3_EN
# SERIAL4_EN fut:SERIAL4_TE_EN  - Tty
build_flags = 
    !python git_rev_macro.py  ; returns -DPIO_SRC_REV=<git_revision>
    #!more build_flags
    ;Either Serial4 or SerialUSB 
    -DSERIAL4_EN  
    -DSTANDARD_SERIAL_OUTPUT=Serial4
    -DDEBUGGING_SERIAL_OUTPUT=Serial4
    -DSDI12_EXTERNAL_PCINT 
    -DMQTT_MAX_PACKET_SIZE=240
    -I../../src ; .h For easy debug
    -Ilib/RTClib
    ;-Isrc
    ;-DMS_PROCSTATS_DEBUG
    ;-DMS_LOGGER_DEBUG
    ;-DMS_MODEM_DEBUG
    ;-DSTREAMDEBUGGER_DBG
    ;-DTINY_GSM_DEBUG=Serial4

[env:mayfly]
#lib_compat_mode = 2 ; Debugging multiple TinyGSMs
lib_compat_mode = strict ; Debugging multiple TinyGSMs
upload_port = COM10
board = mayfly
platform = atmelavr
framework = arduino
lib_ldf_mode = deep+
; AVR boards need to ignore RTCZero, it's for SAMD only and will not compile for AVR
lib_ignore = ${common.lib_ignore}, RTCZero
src_filter = ${common.cmn_src_filter}

;****build_flags options
;-DSTREAMDEBUGGER_DBG
;FUT-DGIT_BRANCH=rel1_dvlp1m  -OR-  Ideally  !git rev-parse HEAD
; -v for verbose
build_flags = 
    !python git_rev_macro.py  ;returns -DPIO_SRC_REV=<git_revision>
    -DSDI12_EXTERNAL_PCINT
    -DNEOSWSERIAL_EXTERNAL_PCINT
    -DMQTT_MAX_PACKET_SIZE=240
    -I../../src ; .h For easy debug
    ;Either Serial or SerialUSB  
    -DSTANDARD_SERIAL_OUTPUT=Serial
    -DDEBUGGING_SERIAL_OUTPUT=Serial
    ;-DSTREAMDEBUGGER_DBG
    -DatlMayfly_DBG
    -DMS_PROCSTATS_DEBUG
    ;LoggerBase.h - problems
    -DMS_LOGGER_DEBUG
    ;LoggerModem.h - below works
    -DMS_MODEM_DEBUG 

lib_deps = ${common.lib_deps} ${common.lib_avr_deps}
    https://github.com/PaulStoffregen/AltSoftSerial.git
    https://github.com/EnviroDIY/SoftwaterSerial_ExternalInts.git
    https://github.com/SRGDamia1/NeoSWSerial.git
    ;https://github.com/neilh10/KellerModbus#work_km_nanolevel
    ;https://github.com/EnviroDIY/KellerModbus
    ;https://github.com/neilh10/Adafruit_INA219#envirodiy

[env:sodaq_autonomo]
;SAMD21J18A 
;targets = debug ; disable for release
board = sodaq_autonomo
platform = atmelsam
framework = arduino
;debug_tool = blackmagic
upload_port = COM27
;debug_port = \.\\COM18

;https://docs.platformio.org/en/latest/plus/debug-tools/jlink.html#configuration
;debug_tool = jlink
;upload_port
;debug_port

;;supports atmel-ice blackmagic J-LINK - default is sam-ba
;upload_protocol = sam-ba
; SWD interface
;upload_protocol = blackmagic
lib_ldf_mode = deep+
lib_ignore = ${common.lib_ignore}, SoftwareSerial_ExtInts, AltSoftSerial
src_filter = ${common.cmn_src_filter}
;-DLoggerBase_DBG -DLoggerModem_DBG -DProcessorStats_DBG -DDEBUGGING_SERIAL_OUTPUT=Serial
;-DSTREAMDEBUGGER_DBG
;    -Isrc/sensors
build_flags = 
    -DSDI12_EXTERNAL_PCINT 
    -DMQTT_MAX_PACKET_SIZE=240
    -DENABLE_SERIAL2
    ; Serial3 shares with LED
    ;-DENABLE_SERIAL3
    -I../../src ; .h For easy debug
    ;Either Serial or SerialUSB  
    -DSTANDARD_SERIAL_OUTPUT=Serial
    -DDEBUGGING_SERIAL_OUTPUT=Serial
    ;-DSTREAMDEBUGGER_DBG
    -DatlMayfly_DBG
    ;-DMS_PROCSTATS_DEBUG
    ;LoggerBase.h - problems
    -DMS_LOGGER_DEBUG
    ;LoggerModem.h - below works
    -DMS_MODEM_DEBUG 

lib_deps = ${common.lib_deps} ${common.lib_samd21_deps}
;;    EnviroDIY_ModularSensors
;;  ^^ Use this when working from an official release of the library
    ;https://github.com/neilh10/ModularSensors#rel1_auto1
    ;https://github.com/neilh10/ModularSensors#rel1_dvlp1m
    ;https://github.com/EnviroDIY/ModularSensors.git#develop
;;  ^^ Use this when if you want to pull from the develop branch


[env:adafruit_feather_m0]
;upload_port = COM26
platform = atmelsam
board = adafruit_feather_m0_no
;board = sodaq_autonomo
framework = arduino
lib_ldf_mode = deep++
;             NeoSWSerial
; SAMD boards need RTCZero for the real time clock and sleeping
lib_deps = ${common.lib_deps} ${common.lib_samd21_deps}

; Most of the software serial libraries won't compile.  Use the SERCOM's; they're better anyway
lib_ignore = ${common.lib_ignore}
            SoftwareSerial_ExtInts
            AltSoftSerial
            NeoSWSerial
src_filter = ${common.cmn_src_filter}
build_flags =
    -DSDI12_EXTERNAL_PCINT 
    -DMQTT_MAX_PACKET_SIZE=240
    ;-DENABLE_SERIAL2
    ;-DENABLE_SERIAL3
    -I../../src ; .h For easy debug
    ;Either Serial1? or SerialUSB
    -DSTANDARD_SERIAL_OUTPUT=Serial
    -DDEBUGGING_SERIAL_OUTPUT=Serial
    ;-DSTREAMDEBUGGER_DBG
    -DatlMayfly_DBG
    -DMS_PROCSTATS_DEBUG
    ;LoggerBase.h - problems
    -DMS_LOGGER_DEBUG
    ;LoggerModem.h - below works
    ;-DMS_MODEM_DEBUG 

    
