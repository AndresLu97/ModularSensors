; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = ModularSensorsNh example sending data to Monitor My Watershed
env_default = mayfly
;env_default = adafruit_feather_m0
;env_default = sodaq_autonomo

[common]
; We have to ignore these folders or PlatformIO will double count all the dependencies
lib_ignore = .git, doc, examples
; .pioenvs, .piolibdeps, .vscode, include, doc, examples, sensor_tests, compile_tests, pioScripts
lib_deps =
    ;EnviroDIY_ModularSensors
    ;https://github.com/soligen2010/Adafruit_ADS1X15
;  ^^ Use this when working from an official release of the library
    ;https://github.com/neilh10/ModularSensors#release1
    ;https://github.com/neilh10/ModularSensors#rel1_dvlp1m
    https://github.com/neilh10/ModularSensors#rel1_dvlp1_wk190320
;  ^^ Use this when if you want to pull from the develop branch
    https://github.com/EnviroDIY/SoftwareSerial_ExternalInts.git
    ;https://github.com/neilh10/TinyGSM.git
    https://github.com/vshymanskyy/StreamDebugger

lib_samd_deps =
    https://github.com/adafruit/RTClib
    RTCZero

; for development, can edit directly in these directories ... relative to src_dir
;  Use the src filter to ensure subfolders are built
cmn_src_filter = +<*> ;+<..\lib\ModularSensors\src>
    +<*> +<../../../src> ; +<../../src/sensors> +<../../src/publishers>

[env:mayfly]
lib_compat_mode = 2 ; Debugging multiple TinyGSMs
upload_port = COM10
board = mayfly
platform = atmelavr
framework = arduino
lib_ldf_mode = deep+
; AVR boards need to ignore RTCZero, it's for SAMD only and will not compile for AVR
lib_ignore = ${common.lib_ignore}, RTCZero
src_filter = ${common.cmn_src_filter}

;****build_flags options
;-DDEBUG_SERIAL
;//#define DEBUGGING_SERIAL_OUTPUT Serial
;-DMODEM_DEBUGGING_SERIAL_OUTPUT=Serial
;-DTINY_GSM_DEBUG=Serial
;-DLoggerEnviroDIY_DBG
;-DExternalVoltage_DBG
;-DBUILD_TIMESTAMP //Dont use
;-DSTREAMDEBUGGER_DBG
;-DLoggerBase_DBG
;-DLoggerModem_DBG
;-DVariableBase_DBG
;-DProcessorStats_DBG
;-DTinyGsmClientXbee_DBG
;FUT-DGIT_BRANCH=rel1_dvlp1m  -OR-  Ideally  !git rev-parse HEAD
; -v for verbose
build_flags = -DLoggerModem_DBG 
    ;-DSTREAMDEBUGGER_DBG
    -DBUILD_TIMESTAMP 
    -DSDI12_EXTERNAL_PCINT
    -DNEOSWSERIAL_EXTERNAL_PCINT
    -DMQTT_MAX_PACKET_SIZE=240
    -DTINY_GSM_DEBUG=Serial
    -DMODEM_DEBUGGING_SERIAL_OUTPUT=Serial
    -I../../src ; .h For easy debug

lib_deps = ${common.lib_deps}
    https://github.com/PaulStoffregen/AltSoftSerial.git
    https://github.com/EnviroDIY/SoftwaterSerial_ExternalInts.git
    https://github.com/SRGDamia1/NeoSWSerial.git
    ;https://github.com/neilh10/KellerModbus#work_km_nanolevel
    ;https://github.com/EnviroDIY/KellerModbus
    ;https://github.com/neilh10/Adafruit_INA219#envirodiy

[env:sodaq_autonomo]
;SAMD21J18A 
;targets = debug ; disable for release

board = sodaq_autonomo
platform = atmelsam
framework = arduino
;debug_tool = blackmagic
;upload_port = \\.\COM12
;debug_port = \\.\COM12

;https://docs.platformio.org/en/latest/plus/debug-tools/jlink.html#configuration
;debug_tool = jlink
;upload_port
;debug_port

;;supports atmel-ice blackmagic J-LINK - default is sam-ba
;upload_protocol = sam-ba
; SWD interface
;upload_protocol = blackmagic
lib_ldf_mode = deep+
lib_ignore = ${common.lib_ignore}, SoftwareSerial_ExtInts, AltSoftSerial
src_filter = ${common.cmn_src_filter}
;-DLoggerBase_DBG -DLoggerModem_DBG -DProcessorStats_DBG -DDEBUGGING_SERIAL_OUTPUT=Serial
;-DSTREAMDEBUGGER_DBG
;    -Isrc/sensors
build_flags = 
    -DSDI12_EXTERNAL_PCINT 
    -DMQTT_MAX_PACKET_SIZE=240
    -DENABLE_SERIAL2
    -DENABLE_SERIAL3
    ;-DSTANDARD_SERIAL_OUTPUT=Serial1  ;Define SerialTty output

lib_deps = ${common.lib_deps} ${common.lib_samd_deps}
;;    EnviroDIY_ModularSensors
;;  ^^ Use this when working from an official release of the library
    ;https://github.com/neilh10/ModularSensors#rel1_auto1
    ;https://github.com/neilh10/ModularSensors#rel1_dvlp1m
    ;https://github.com/EnviroDIY/ModularSensors.git#develop
;;  ^^ Use this when if you want to pull from the develop branch


[env:adafruit_feather_m0]
;upload_port = COM10
platform = atmelsam
board = adafruit_feather_m0
;board = sodaq_autonomo
framework = arduino
lib_ldf_mode = deep++
;             NeoSWSerial
; SAMD boards need RTCZero for the real time clock and sleeping
lib_deps = ${common.lib_deps}

; Most of the software serial libraries won't compile.  Use the SERCOM's; they're better anyway
lib_ignore = ${common.lib_ignore}
            SoftwareSerial_ExtInts
            AltSoftSerial
            NeoSWSerial
src_filter = ${common.cmn_src_filter}
build_flags =
    -DSDI12_EXTERNAL_PCINT
    -DMQTT_MAX_PACKET_SIZE=240
    -DSTANDARD_SERIAL_OUTPUT=Serial1
    ;-DSerial=Serial1
    ;-DDEBUGGING_SERIAL_OUTPUT=Serial1
    ;-I../../src ; For easy debug


    
