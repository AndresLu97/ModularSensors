; ModularSensors a/kn_depth PlatformIO Project Configuration File
; The 'default_envs' drives a/kn_depth/src/ms_cfg for specific peripherals
; SAMD21 M0 - Feather format for B031r1
;   Feather M0 (Adalogger) - ?LED, microSD
;   Feather M0 express - ?LEDs, 2MflashSPI
;   Sodaq_autonomo M0 - not supported, but reference ccF
;   Feather M0 RFM95 LoRa 900Mhz ? - possible support- LEDs
;   Feather M0 RFM69HCW - not supported
;   Feather M0 basic 
;   Feather M0 Bluefruit LE
;   Feather M0 WiFi 
;   Feather M0 RFM96 LoRa 433Mhz - notsupported
; SAMD51 M4 - tbd changes for internal peripherals - watchdog, sleep
; Mayfly/avr - reference as needed.
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = neilh10/ModularSensors sending data to Monitor My Watershed
; From "0.23.15" mayfly serial RS485 appears to be having problems. Switched to Feather_m4+B031
;default_envs = sodaq_autonomo
;default_envs = adafruit_feather_m0  ; not working, but trying
;default_envs = adafruit_feather_m0_express ;not working
;default_envs = adafruit_feather_m4
;default_envs =seeed_wio_terminal

[common]
; Ignore these folders or PlatformIO will double count all the dependencies
; Development: ModularSensors Release1: src ?
; ?? .pioenvs, .piolibdeps, .vscode, include, doc, examples, sensor_tests, compile_tests, pioScripts
lib_ignore = .git, doc, examples, arduino_update, ModularSensors, Adafruit Circuit Playground
#Would be nice for the following to work
#git_rev = !python -c "import subprocess; print '%s' % subprocess.check_output(['git', 'rev-parse','--abbrev-ref', 'HEAD']).strip()"

lib_cmn_deps =
    ; These are latest beyond EnviroDIY releases
    https://github.com/vshymanskyy/StreamDebugger  ;Debug when needed
    https://github.com/neilh10/SensorModbusMaster ; default release1
    https://github.com/neilh10/Adafruit_INA219.git 
    https://github.com/adafruit/SdFat ;- need adafruit/SdFat for multiple SDx
    ;https://github.com/arduino-libraries/NTPClient - repalced
    ;; see lib_samd_deps for   Adafruit_SPIFlash & Adafruit_TinyUSB_Arduino & Adafruit-GFX-Library Adafruit_NeoPixel
    ;
    ; For development, disable ModularSensors and enable cmn_src_filter 
    ; Need extra libs, so eable STD_LIBS or 1st pass enable ModularSensors then build pulling in ref libs,
    ;EnviroDIY_ModularSensors
;  ^^ Use this when working from an official release of the library
    ;https://github.com/neilh10/ModularSensors#release1
    ;https://github.com/neilh10/ModularSensors#rel1_dvlp1m
;  ^^ Use this when you want to pull from a specific branch 
; STD_LIBS pulled in by ModularSensors, needed if not enabling ModularSensors to Historical Ref
    https://github.com/soligen2010/Adafruit_ADS1X15
    https://github.com/adafruit/Adafruit_AM2315
    https://github.com/adafruit/Adafruit_AM2320
    https://github.com/adafruit/Adafruit_BME280_Library
    https://github.com/adafruit/Adafruit_MPL115A2
    https://github.com/adafruit/DHT-sensor-library
    https://github.com/adafruit/Adafruit_Sensor
    https://github.com/milesburton/Arduino-Temperature-Control-Library ;Pulls in DallasTemperature
    https://github.com/EnviroDIY/KellerModbus
    https://github.com/NorthernWidget/MS5803
    https://github.com/PaulStoffregen/OneWire
    https://github.com/knolleary/pubsubclient.git
    ;https://github.com/EnviroDIY/TinyGSM.git
    https://github.com/EnviroDIY/YosemitechModbus#v0.2.5
    ;
    ;Historical reference 
    ;https://github.com/greiman/SdFat.git ;- need adafruit/SdFat for multiple SDx
    https://github.com/neilh10/TinyGSM.git ; Envirodiy goodenough

lib_avr_deps = ;Specific Mayfly board goes in [Mayfly]


lib_samd_deps =
    ;https://github.com/adafruit/SdFat
    https://github.com/adafruit/Adafruit_SPIFlash
    https://github.com/adafruit/Adafruit_TinyUSB_Arduino.git#0.8.0 ;Has MIDI after 0.8.0. Requires -DUSE_TINYUSB
    ;https://github.com/adafruit/Adafruit_TinyUSB_Arduino ;Has MIDI post 0.8.0. Requires -DUSE_TINYUSB
    https://github.com/neilh10/arduino-mcp23017
    https://github.com/neilh10/RTCZero ;- conflict with Seeed_Arduino_RTC\RTC_SAMD51.h ;release1 set as default - see lib\RTCsamdLooUQ
    ; ;except when exists kn_depth\lib\RTClib, delete .pio\libdeps\xx\RTClib
    https://github.com/neilh10/RTClib
    ;https://github.com/adafruit/Adafruit-GFX-Library
    ;https://github.com/adafruit/Adafruit_EPD
    ;FUT https://github.com/adafruit/Adafruit_NeoPixel

lib_featherExpress_deps =
    https://github.com/adafruit/Adafruit_NeoPixel
    #feather_Mx_express means local flash disk (2Mbyte+) & NeoPixel

lib_wio_terminal_deps =
    ; wio terminal getting new WiFi lib
    ;https://github.com/Seeed-Studio/Seeed_Arduino_atWiFi
    ;https://github.com/Seeed-Studio/Seeed_Arduino_FreeRTOS
    ;https://github.com/Seeed-Studio/Seeed_Arduino_atUnified
    ;https://github.com/Seeed-Studio/esp-at-lib
    ; objective figure out why Seeed_Arduino_RTC is needed and not RTCzero
    ;https://github.com/Seeed-Studio/Seeed_Arduino_RTC
    https://github.com/milesburton/Arduino-Temperature-Control-Library

lib_samd21_deps =    

lib_samd51_deps =
    https://github.com/neilh10/EnableInterrupt   ;release1 set as default
    https://github.com/neilh10/Arduino-SDI-12 ;release1 set as default
    ;https://github.com/adafruit/Adafruit_SPIFlash



; for development, can edit directly in these directories ... relative to src_dir
;  Use the src filter to ensure subfolders are built
; If enabled, disable in lib_cmn_deps=[]ModularSensors, and may need to delete duplicate directory .libdeps/ModularSensors
cmn_src_filter = +<*>  +<../../../src>  +<../../../src/sensors> +<../../../src/publishers> +<../../../src/modems>

#build_flags  -v for detailed cc verbose 
cmn_build_flags =
    -Isrc
    -I../../src ; .h For easy debug
    -I../../src/sensors ; .h For easy debug
    ;-Ilib/RTClib ;When exists kn_depth\lib\RTClib
    !python git_rev_macro.py  ;returns -DPIO_SRC_REV=<git_revision>
    ;-DTINY_GSM_DEBUG=Serial
    -DMQTT_MAX_PACKET_SIZE=240
    ;-DSDI12_EXTERNAL_PCINT
    ;-DSTREAMDEBUGGER_DBG
    -DMS_KN_DEPTH_DEBUG
    ;-DMS_KN_DEPTH_DEBUG_DEEP
    ;-DMS_LOGGERBASE_SLEEP_DEBUG ;Need or below
    -DMS_LOGGERBASE_DEBUG ; ALso debugging output when sleeping
    ;-DMS_LOGGERBASE_DEEP_DEBUG
    ;-DMS_PROCESSORSTATS_DEBUG
    ;-DMS_PROCESSORADC_DEBUG
    ;-DMS_LOGGERMODEM_DEBUG
    ;-DMS_LOGGERMODEM_DEBUG_DEEP
    ;-DMS_DATAPUBLISHERBASE_DEBUG
    ;-DMS_ENVIRODIYPUBLISHER_DEBUG
    ;-DMS_SMTP2GOJSONPUBLISHER_DEBUG
    ;-DMS_DIGIXBEEWIFI_DEBUG
    ;-DMS_DIGIXBEEWIFI_DEBUG_DEEP
    ;-DMS_DIGIXBEECELLULARTRANSPARENT_DEBUG
    ;-DMS_DIGIXBEECELLULARTRANSPARENT_DEBUG_DEEP
    ;-DMS_DIGIXBEE_DEBUG
    ;-DMS_SENSORBASE_DEBUG
    ;-DMS_TIINA219M_DEBUG
    ;-DMS_AOSONGAM2315_DEBUG
    ;-DMS_EXTERNALVOLTAGE_DEBUG
    ;-DMS_VARIABLEARRAY_DEBUG
    ;-DMS_VARIABLEARRAY_DEBUG_DEEP
    ;-DMS_VARIABLEBASE_DEBUG
    ;-DMS_VARIABLEBASE_DEBUG_DEEP
    ;-DMS_KELLERPARENT_DEBUG
    ;-DMS_KELLERPARENT_DEBUG_DEEP
    ;-DMS_MODBUS_DEBUG
    -DMS_ANALOGELECCONDUCTIVITY_DEBUG
    ;-DMS_ANALOGELECCONDUCTIVITY_DEBUG_DEEP

[env:seeed_wio_terminal]
platform = atmelsam
board = seeed_wio_terminal
framework = arduino
upload_port = COM10
lib_ldf_mode = deep+

# lib_ignore Std SAMDx AltSoftSerial SoftwareSerial_ExtInts (ignored in SAMD12 Autonomo)
# SensorModbusMaster_ID1824\SensorModbusMaster.cpp.o - M4 Register errors, error: 'REG_GCLK_GENDIV'
# Arduino-SDI-12_ID1486, Arduino-SDI-12\src\SDI12_boards.cpp:171:9: error: 'REG_GCLK_GENDIV' 
# 
lib_ignore = ${common.lib_ignore}, SoftwareSerial_ExtInts, AltSoftSerial, MaximDS3231, EnviroDIY_DS3231,  NeoSWSerial
src_filter = ${common.cmn_src_filter}, -<../../../src/sensors/STSTC3100_Sensor.cpp>, -<../../../src/sensors/TallyCounterI2C.cpp> 

#build_flags = -v
# SERIAL2_EN fut:SERIAL2_TE_EN  - only enable when modbusSerial required
# SERIAL3_EN
# SERIAL4_EN fut:SERIAL4_TE_EN  - Tty
build_flags =  ;review for WIO
    ${common.cmn_build_flags}
    ;-UVARIANT_QSPI_BAUD_DEFAULT ;prev def cmd line, also variant.h
    ;-DSDQ_QSPI_FLASH
    #!more build_flags
    ;Either Serial4 or SerialUSB 
    ;-DSERIAL4_EN  
    -DSTANDARD_SERIAL_OUTPUT=Serial
    -DDEBUGGING_SERIAL_OUTPUT=Serial
    -DDEEP_DEBUGGING_SERIAL_OUTPUT=Serial
    ;-DSERIAL2_EN
    ;-DSERIAL2_TE_CNTL
    ;-DSERIAL2_TE_HALF_DUPLEX
    -DUSE_TINYUSB ;need if Adafruit_TinyUSB_Arduino
    -DSDI12_EXTERNAL_PCINT 
    ;-DCUSTOM_B031
    ;-DMS_PROCSTATS_DEBUG
    ;-DMS_LOGGERBASE_DEBUG
    ;-DMS_DATAPUBLISHERBASE_DEBUG
    ;-DMS_MODEM_DEBUG
    ;-DSTREAMDEBUGGER_DBG
    ;-DTINY_GSM_DEBUG=Serial4
    ;-DMS_DIGIXBEEWIFI_DEBUG
    ;-DMS_PortExpanderB031E_DEBUG
    ;-DMS_PortExpanderB031E_DEBUG_DEEP
    ;-DWIRING_DIGITAL_DEBUG ;still can't connect debug

lib_deps=  ${common.lib_cmn_deps}  ${common.lib_samd_deps} ${common.lib_wio_terminal_deps} ${common.lib_samd51_deps}

    ;OneWire
    ;M5Stack@0.1.9  ;Free_Fonts.h
    ; NTPClient
